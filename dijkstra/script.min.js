var container=document.getElementById("container");var scene=new THREE.Scene;var camera=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.1,1e3);var camera=new THREE.OrthographicCamera(-1,1,1,-1,1,1e3);camera.position.set(50,10,1);camera.zoom=30;var frustumSize=1e3;var renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});renderer.setSize(window.innerWidth,window.innerHeight);renderer.setPixelRatio(window.devicePixelRatio);container.appendChild(renderer.domElement);var controls=new THREE.OrbitControls(camera,renderer.domElement);var clock=new THREE.Clock;var colors=[15559258,16052667,10207676,6071465,15133664,15775359,16670549,14078385,13103055,15660507,5263695,15884124,16769126,2390944,7389619];var ROOT_COLOR=colors[0];var DEFAULT_VERTEX_COLOR=colors[2];var DEFAULT_EDGE_COLOR=colors[3];var NEIGHTBOR_COLOR=colors[4];var VISITED_COLOR=15772835;var SELECTED_COLOR=3435706;var resolution=new THREE.Vector2(window.innerWidth,window.innerHeight);var graph=new THREE.Object3D;graph.rotation.y=Math.PI/2;scene.add(graph);setMenu("begin");render();function makeLine(geo,c){var g=new MeshLine;g.setGeometry(geo);var material=new MeshLineMaterial({useMap:false,color:new THREE.Color(colors[c]),opacity:1,resolution:resolution,sizeAttenuation:!false,lineWidth:.01,near:camera.near,far:camera.far});var mesh=new THREE.Mesh(g.geometry,material);graph.add(mesh);return mesh}var latofont;function config(callback){var loader=new THREE.FontLoader;loader.load("Lato Light_Regular.json",function(font){latofont=font;callback()})}function makeText(text){var geometry=new THREE.TextGeometry(text,{font:latofont,size:1,height:.1,curveSegments:12});var material=new MeshLineMaterial({useMap:false,color:new THREE.Color(DEFAULT_VERTEX_COLOR),opacity:1,resolution:resolution,sizeAttenuation:!false,lineWidth:.01,near:camera.near,far:camera.far});var mesh=new THREE.Mesh(geometry,material);graph.add(mesh);return mesh}function connectDots(dots,i,j,w){var line=new THREE.Geometry;var x=dots[i].position.x;var y=dots[i].position.y;var z=dots[i].position.z;line.vertices.push(new THREE.Vector3(x,y,z));x=dots[j].position.x;y=dots[j].position.y;z=dots[j].position.z;line.vertices.push(new THREE.Vector3(x,y,z));var meshline=makeLine(line,3);var text=makeText(String(w));var p1=line.vertices[0];var p2=line.vertices[1];var ptext=p1.clone().addScaledVector(p2,-1).multiplyScalar(.5).add(p2);text.position.copy(ptext);if(!("edges"in dots[j]))dots[j].edges=[];if(!("edges"in dots[i]))dots[i].edges=[];var edge={mesh:meshline,vertices:[dots[i],dots[j]],text:text,weight:w};dots[j].edges.push(edge);dots[i].edges.push(edge);return edge}function disconnectDots(dots,i,j){var vi=dots[i];var vj=dots[j];var edge=vi.edges.find(function(edge){return edge.vertices.includes(vj)});if(!edge)return;graph.remove(edge.mesh);graph.remove(edge.text);edge.mesh.geometry.dispose();edge.mesh.material.dispose();edge.text.geometry.dispose();edge.text.material.dispose();vi.edges=vi.edges.filter(function(e){return edge!=e});vj.edges=vj.edges.filter(function(e){return edge!=e})}function changeWeight(dots,i,j,w){var vi=dots[i];var vj=dots[j];var edge;if(vi.edges)edge=vi.edges.find(function(edge){return edge.vertices.includes(vj)});if(!edge)return connectDots(dots,i,j,w);graph.remove(edge.text);edge.text.geometry.dispose();edge.text.material.dispose();var text=makeText(String(w));var arr=edge.vertices.map(function(v){return v.position});var p1=arr[0];var p2=arr[1];var ptext=p1.clone().addScaledVector(p2,-1).multiplyScalar(.5).add(p2);text.position.copy(ptext);edge.text=text;edge.weight=w}function randomConnectDots(dots){var connections=[];for(var i=0;i<dots.length;i++)for(var j=i+1;j<dots.length;j++){var create=Math.random()>1-2.5/dots.length;if(create){var weight=Math.floor(Math.random()*10);connectDots(dots,i,j,weight)}}return connections}function createDots(n,r){var PI=Math.PI;var dots=[];var phi_1=0;dots.push(addSphericPoint(r,0,0));for(var j=2;j<=n-1;j++){var h=-1+2*(j-1)/(n-1);var theta=Math.acos(h);var phi=(phi_1+3.6/Math.sqrt(n*(1-h*h)))%(2*PI);phi_1=phi;dots.push(addSphericPoint(r,theta,phi))}dots.push(addSphericPoint(r,PI,0));return dots}function addSphericPoint(r,theta,phi){var geometry=new THREE.SphereGeometry(1,32,32);var material=new MeshLineMaterial({useMap:false,color:new THREE.Color(colors[0]),opacity:1,resolution:resolution,sizeAttenuation:!false,lineWidth:.01,near:camera.near,far:camera.far});var mesh=new THREE.Mesh(geometry,material);mesh.position.x=r*Math.sin(theta)*Math.cos(phi);mesh.position.y=r*Math.sin(theta)*Math.sin(phi);mesh.position.z=r*Math.cos(theta);mesh.material.uniforms.color.value.setHex(colors[1]);graph.add(mesh);return mesh}function colorDot(dot,hex){dot.material.uniforms.color.value.setHex(hex)}function colorDots(dots){dots[0].material.uniforms.color.value.setHex(ROOT_COLOR);for(var j=1;j<dots.length;j++)dots[j].material.uniforms.color.value.setHex(DEFAULT_VERTEX_COLOR)}function setMenu(mode){function hideElements(className){var els=document.getElementsByClassName(className);for(var i=0;i<els.length;i++){var el=els[i];el.style.display="none"}}function showElements(className){var els=document.getElementsByClassName(className);for(var i=0;i<els.length;i++){var el=els[i];el.style.display="block"}}switch(mode){case"dijkstra":hideElements("connect");hideElements("begin");showElements("dijkstra");document.getElementById("nodes-number-dijkstra").value=document.getElementById("nodes-number").value;document.getElementById("nodes-visited").value=1;document.getElementById("nodes-next").value="-";break;case"begin":hideElements("connect");hideElements("dijkstra");showElements("begin");break;case"connect":hideElements("dijkstra");hideElements("begin");showElements("connect")}}var node1;var node2;function inptSelectNode(id){var val=document.getElementById("inpt-node-"+id).value;var node=id==1?node1:node2;var node_id=Number(val);if(val=="")node_id=dots.length;if(node)colorDot(node,DEFAULT_VERTEX_COLOR);if(dots.indexOf(node)==0)colorDot(node,ROOT_COLOR);if(node_id<dots.length){node=dots[node_id];colorDot(node,SELECTED_COLOR);node.node_id=node_id}else node=null;if(id==1)node1=node;else node2=node}function inptChangeWeight(w){if(w=="")disconnectDots(dots,node1.node_id,node2.node_id);else changeWeight(dots,node1.node_id,node2.node_id,Number(w))}var dots;function menuConnect(){setMenu("connect");var N=document.getElementById("nodes-number").value;var r=10;config(function(){dots=createDots(N,r);colorDots(dots)})}function init(){setMenu("dijkstra");colorDots(dots);dijkstra(dots)}var ijk=-1;function continueDijkstra(){function colorLineMesh(vertex,color){vertex.material.uniforms.color.value.setHex(color)}function addTextToVertex(vertex,text){if("text"in vertex){graph.remove(vertex.text);vertex.text.geometry.dispose();vertex.text.material.dispose()}var text=makeText(text);text.position.copy(vertex.position);text.position.y=text.position.y+1;vertex.text=text;graph.add(text);return text}ijk+=1;if(ijk%2==0){new_vertex.edges.forEach(function(edge){var other=edge.vertices[0]==new_vertex?edge.vertices[1]:edge.vertices[0];if(!other.visited){colorLineMesh(other,NEIGHTBOR_COLOR);colorLineMesh(edge.mesh,NEIGHTBOR_COLOR)}if(!other.visited&&(other.distance==undefined||other.distance>new_vertex.distance+edge.weight)){neightbors[other.vid]=other;neightbors_edge[other.vid]=edge;other.distance=new_vertex.distance+edge.weight;addTextToVertex(other,String(other.distance));colorLineMesh(other.text,NEIGHTBOR_COLOR)}});document.getElementById("nodes-next").value=Object.keys(neightbors).length}else{var min_vertex=null;for(var k in neightbors){var vertex=neightbors[k];if(!min_vertex||min_vertex.distance>vertex.distance)min_vertex=vertex}var min_edge=neightbors_edge[min_vertex.vid];colorLineMesh(min_vertex,VISITED_COLOR);colorLineMesh(min_vertex.text,VISITED_COLOR);colorLineMesh(min_edge.mesh,VISITED_COLOR);colorLineMesh(min_edge.text,VISITED_COLOR);delete neightbors[min_vertex.vid];min_vertex.visited=true;new_vertex=min_vertex;document.getElementById("nodes-visited").value=Number(document.getElementById("nodes-visited").value)+1}}var vertices={};var new_vertex;var neightbors;var neightbors_edge;function dijkstra(dots){dots.forEach(function(dot,i){vertices[i]=dot;dot.visited=false;dot.vid=i});new_vertex=dots[0];dots[0].visited=true;new_vertex.distance=0;neightbors={};i=0;neightbors_edge={}}onWindowResize();function onWindowResize(){var w=container.clientWidth;var h=container.clientHeight;var aspect=w/h;camera.left=-frustumSize*aspect/2;camera.right=frustumSize*aspect/2;camera.top=frustumSize/2;camera.bottom=-frustumSize/2;camera.updateProjectionMatrix();renderer.setSize(w,h);resolution.set(w,h)}window.addEventListener("resize",onWindowResize);function render(){requestAnimationFrame(render);controls.update();graph.rotation.y+=.01*clock.getDelta();renderer.render(scene,camera)}
